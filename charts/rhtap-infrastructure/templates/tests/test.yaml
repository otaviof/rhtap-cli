{{- $name := printf "%s-test-%s" .Chart.Name .Release.Revision -}}
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded
  labels:
    {{- include "rhtap-infrastructure.labels" . | nindent 4 }}
  name: {{ $name }} 
spec:
  restartPolicy: Never
  serviceAccountName: {{ .Release.Name }}
  containers:
    - name: copy-scripts
      image: registry.access.redhat.com/ubi8/ubi-minimal:latest
      workingDir: /scripts
      command:
        - /bin/bash
        - -c
        - |
          set -x -e
{{- range $path, $content := .Files.Glob "scripts/*.sh" -}}
  {{- $name := trimPrefix "scripts/" $path }}
          printf '%s' "{{ $content | toString | b64enc }}" | base64 -d >{{ $name }}
          chmod +x {{ $name }}
{{- end }}
      volumeMounts:
        - name: scripts
          mountPath: /scripts
      securityContext:
        allowPrivilegeEscalation: false
{{- range $k, $v := include "infrastructure.kafkas.enabled" . | fromYaml }}
    - name: {{ printf "%s-kafka-topics-%s" $name $k }}
      image: quay.io/codeready-toolchain/oc-client-base:latest
      env:
        - name: NAMESPACE
          value: {{ $v.namespace }}
      command:
        - /scripts/test-kafka-topics.sh
      args:
  {{- range $t := $v.topics }}
        - {{ printf "%s-%s" $k $t.name | quote }}
  {{- end }}
      volumeMounts:
        - name: scripts
          mountPath: /scripts
      securityContext:
        allowPrivilegeEscalation: false
{{- end }}
{{- range $k, $v := include "infrastructure.minIOTentants.enabled" . | fromYaml }}
    - name: {{ printf "%s-minio-tentant-%s" $name $k }}
      image: quay.io/codeready-toolchain/oc-client-base:latest
      env:
        - name: NAMESPACE
          value: {{ $v.namespace }}
        - name: RESOURCE_TYPE
          value: "statefulset"
      command:
        - /scripts/test-rollout-status.sh
      args:
        - {{ printf "v1.min.io/tenant=%s" $k | quote }}
      volumeMounts:
        - name: scripts
          mountPath: /scripts
      securityContext:
        allowPrivilegeEscalation: false
{{- end }}
{{- range $k, $v := include "infrastructure.postgresClusters.enabled" . | fromYaml }}
    - name: {{ printf "%s-postgrescluster-%s" $name $k }}
      image: quay.io/codeready-toolchain/oc-client-base:latest
      env:
        - name: NAMESPACE
          value: {{ $v.namespace }}
        - name: RESOURCE_TYPE
          value: "statefulset"
      command:
        - /scripts/test-rollout-status.sh
      args:
        - {{
          printf "%s,%s=%s"
            "postgres-operator.crunchydata.com/data=pgbackrest"
            "postgres-operator.crunchydata.com/cluster"
            $k | quote
        }}
      volumeMounts:
        - name: scripts
          mountPath: /scripts
      securityContext:
        allowPrivilegeEscalation: false
{{- end }}
  volumes:
    - name: scripts
      emptyDir: {}
